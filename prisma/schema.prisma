// This is your Prisma schema file
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model services {
  id                          Int                           @id @default(autoincrement())
  service_id                  String                        @unique
  management_id               String
  service_name                String
  price                       Int
  free_consultation           Boolean
  guarantee_system            Boolean
  free_gift                   Boolean
  image_file_path             String
  hour_service                Boolean
  image_bucketss              String
  official_website            String
  managements                 managements                   @relation(fields: [management_id], references: [management_id])
  created_at                  DateTime                      @default(now())
  updated_at                  DateTime                      @default(now()) @updatedAt
  service_contact_information service_contact_information[]
  service_tags                service_tags[]
  similar_services            similar_services?
  reviews                     reviews?
}

model managements {
  management_id   String     @id
  management_name String
  created_at      DateTime   @default(now())
  updated_at      DateTime   @default(now()) @updatedAt
  services        services[]
}

model contact_information {
  contact_information_id      String                        @id
  contact_information_name    String
  created_at                  DateTime                      @default(now())
  updated_at                  DateTime                      @default(now()) @updatedAt
  service_contact_information service_contact_information[]
}

model service_contact_information {
  id                     Int                 @id @default(autoincrement())
  service_id             String              @unique
  contact_information_id String              @unique
  services               services            @relation(fields: [service_id], references: [service_id])
  contact_information    contact_information @relation(fields: [contact_information_id], references: [contact_information_id])
  created_at             DateTime            @default(now())
  updated_at             DateTime            @default(now()) @updatedAt
}

model tags {
  id           Int            @id @default(autoincrement())
  tag_id       String         @unique
  tag_name     String         @unique
  created_at   DateTime       @default(now())
  updated_at   DateTime       @default(now()) @updatedAt
  service_tags service_tags[]
}

model service_tags {
  id         Int      @id @default(autoincrement())
  tag_id     String   @unique
  service_id String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  tags       tags     @relation(fields: [tag_id], references: [tag_id])
  services   services @relation(fields: [service_id], references: [service_id])
}

model similar_services {
  id                 Int      @id @default(autoincrement())
  service_id         String   @unique
  similar_service_id String   @unique
  created_at         DateTime @default(now())
  updated_at         DateTime @default(now()) @updatedAt
  services           services @relation(fields: [service_id], references: [service_id])
}

enum Gender {
  MEN
  WOMEN
}

model reviews {
  id                          Int                          @id @default(autoincrement())
  service_id                  String                       @unique
  review_id                   String                       @unique
  name                        String                       @db.VarChar(30)
  title                       String                       @db.VarChar(50)
  gender                      Gender
  good_title                  String                       @db.VarChar(255)
  good_detail                 String
  concern_title               String                       @db.VarChar(255)
  concern_detail              String
  created_at                  DateTime                     @default(now())
  updated_at                  DateTime                     @default(now())
  services                    services                     @relation(fields: [service_id], references: [service_id])
  contributor_years_id        Int?
  reviews_satisfaction_scores reviews_satisfaction_scores?
  contributor_years           contributor_years?           @relation(fields: [contributor_years_id], references: [id])
}

model reviews_satisfaction_scores {
  id                            Int     @id @default(autoincrement())
  satisfaction_scores_id        String  @unique
  review_id                     String  @unique
  price_satisfaction            Int
  speed_satisfaction            Int
  response_satisfaction         Int
  cost_performance_satisfaction Int
  comprehensive_evaluation      Int
  created_at                    String
  updated_at                    String
  reviews                       reviews @relation(fields: [review_id], references: [review_id])
}

model contributor_years {
  id      Int       @id @default(autoincrement())
  age     String    @unique
  reviews reviews[]
}
